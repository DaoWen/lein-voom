#!/bin/bash

## ATTENTION ##
# This script is designed to be invoked via an alias:
#
#    $ alias box="source /path/to/box/script"
#
# Invoking in this manner allows us to change the caller's current
# directory and environment. Very handy things... however this means
# we need to be careful with the callers environment. We need to be
# sure that if we change directory or set environment variables that
# we don't clobber caller state in unintended ways. Be sure therefore
# to restore the current working directory (unless intending to
# actually change it and be sure to use the "local" qualifier on
# variable declarations in funtions.

# For the above reasons, we can use set -x no matter how much we would
# like to. (It will call the calling context to exit.)

function run_box_job {
    local tfile=$(mktemp -t voom-box)
    local target_dir="$PWD"
    local cmd="${1:-help}"; shift

    local d="$target_dir"
    while [[ "/" != $(\cd -P $d && \pwd) ]]; do
        if [[ -d "$d/.voom-box" ]]; then
           \cd $(\cd -P $d && \pwd)
           break
        fi
        d="$d/.."
    done

    local cli_version=2
    \lein voom :box "$cli_version" "$target_dir" "$tfile" ":box-${cmd}" "$@"

    # Return to our target location, as much as it still exists.
    local d="$target_dir"
    while ! [[ -d "$d" ]]; do d=$(dirname "$d"); done
    \cd "$d"

    \rm "$tfile"
}

# TODO: signal/exit handler to kill background process
run_box_job "$@"
