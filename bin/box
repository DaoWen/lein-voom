#!/bin/bash

## ATTENTION ##
# This script is designed to be invoked via an alias:
#
#    $ alias box="source /path/to/box/script"
#
# Invoking in this manner allows us to change the caller's current
# directory and environment. Very handy things... however this means
# we need to be careful with the callers environment. We need to be
# sure that if we change directory or set environment variables that
# we don't clobber caller state in unintended ways. Be sure therefore
# to restore the current working directory (unless intending to
# actually change it and be sure to use the "local" qualifier on
# variable declarations in funtions.

# For the above reasons, we can use set -x no matter how much we would
# like to. (It will call the calling context to exit.)

function run_box_job {
    local tdir=$(mktemp -d)
    local ififo="${tdir}/voom-box-fifo-in"
    local ofifo="${tdir}/voom-box-fifo-out"
    mkfifo -m 600 "$ififo"
    mkfifo -m 600 "$ofifo"

    local cli_version=1
    lein voom :box "$cli_version" "$PWD" "$ofifo" "$ififo" "$@" &

    echo "X" > "$ofifo" # prime the pump
    while read x; do
        eval "$x"
        echo "$?" > "$ofifo"
    done < "$ififo"
    echo "0" > "$ofifo"

    rm "$ififo" "$ofifo"
    rmdir "$tdir"
    fg %- >/dev/null # silences job control output
}

# TODO: signal/exit handler to kill background process
run_box_job "$@"
